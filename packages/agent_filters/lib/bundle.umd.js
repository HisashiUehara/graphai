!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ajv")):"function"==typeof define&&define.amd?define(["exports","ajv"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).graphai_agent_filters={},e.Ajv)}(this,(function(e,t){"use strict";const n=(e,n)=>{if(!(new t).compile(e)(n))throw new Error("schema not matched");return!0};const a=async(e,t,n,a)=>{const r=async function*(e,t){const{params:n,inputs:a,namedInputs:r,debugInfo:s,filterParams:o}=t,i={params:n,inputs:a,debugInfo:s,filterParams:o,namedInputs:r},l=await fetch(e,{headers:{"Content-Type":"text/event-stream"},method:"POST",body:JSON.stringify(i)}),c=l.body?.getReader();if(200!==l.status||!c)throw new Error("Request failed");const d=new TextDecoder("utf-8");let u=!1;for(;!u;){const{done:e,value:t}=await c.read();if(e)u=e,c.releaseLock();else{const e=d.decode(t,{stream:!0});yield e}}}(t,n),s=[];for await(const t of r)a&&console.log(t),t&&(s.push(t),-1===s.join("").indexOf("___END___")&&e.filterParams.streamTokenCallback&&e.filterParams.streamTokenCallback(t));const o=s.join("").split("___END___")[1];return JSON.parse(o)};e.agentFilterRunnerBuilder=e=>{const t=e;return(e,n)=>{let a=0;const r=e=>{const s=t[a++];return s?s.agent(e,r):n(e)};return r(e)}},e.agentInputValidator=n,e.httpAgentFilter=async(e,t)=>{const{params:n,inputs:r,debugInfo:s,filterParams:o,namedInputs:i}=e;if(o?.server){const{baseUrl:t,isDebug:l,serverAgentUrlDictionary:c}=o.server,d=s.agentId,u=void 0!==o.streamTokenCallback,f=c&&d&&c[d]?c[d]:[t,d].join("/");void 0===f&&console.log("httpAgentFilter: Url is not defined");const p={params:n,inputs:r,debugInfo:s,filterParams:o,namedInputs:i};return u?await a(e,f,p,l):await(async(e,t)=>{const n=await fetch(e,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await n.json()})(f,p)}return t(e)},e.namedInputValidatorFilter=async(e,t)=>{const{inputSchema:a,namedInputs:r}=e;return a&&"array"!==a.type&&n(a,r||{}),t(e)},e.streamAgentFilterGenerator=e=>async(t,n)=>(t.debugInfo.isResult&&(t.filterParams.streamTokenCallback=n=>{e(t,n)}),n(t))}));
//# sourceMappingURL=bundle.umd.js.map

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ajv"),require("graphai")):"function"==typeof define&&define.amd?define(["exports","ajv","graphai"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).graphai_agent_filters={},e.Ajv,e.graphai)}(this,(function(e,t,a){"use strict";const n=(e,a)=>{if(!(new t).compile(e)(a))throw new Error("schema not matched");return!0};const r=async(e,t,a,n)=>{const r=async function*(e,t){const{params:a,inputs:n,namedInputs:r,debugInfo:s,filterParams:o}=t,i={params:a,inputs:n,debugInfo:s,filterParams:o,namedInputs:r},c=await fetch(e,{headers:{"Content-Type":"text/event-stream"},method:"POST",body:JSON.stringify(i)}),u=c.body?.getReader();if(200!==c.status||!u)throw new Error("Request failed");const d=new TextDecoder("utf-8");let l=!1;for(;!l;){const{done:e,value:t}=await u.read();if(e)l=e,u.releaseLock();else{const e=d.decode(t,{stream:!0});yield e}}}(t,a),s=[];for await(const t of r)n&&console.log(t),t&&(s.push(t),-1===s.join("").indexOf("___END___")&&e.filterParams.streamTokenCallback&&e.filterParams.streamTokenCallback(t));const o=s.join("").split("___END___")[1];return JSON.parse(o)},s=e=>Array.isArray(e)?e.map((e=>s(e))):a.isObject(e)?Object.keys(e).sort().reduce(((t,a)=>(t[a]=e[a],t)),{}):e;e.agentFilterRunnerBuilder=e=>{const t=e;return(e,a)=>{let n=0;const r=e=>{const s=t[n++];return s?s.agent(e,r):a(e)};return r(e)}},e.agentInputValidator=n,e.cacheAgentFilterGenerator=e=>{const{getCache:t,setCache:a}=e;return async(e,n)=>{const{namedInputs:r,params:o,debugInfo:i}=e;if("pureAgent"===e.cacheType){const{agentId:c}=i,u=JSON.stringify(s({namedInputs:r,params:o,agentId:c})),d=await t(u);if(d)return d;const l=await n(e);return await a(u,JSON.stringify(l)),l}return"impureAgent"===e.cacheType&&(e.filterParams.cache={getCache:t,setCache:a}),n(e)}},e.httpAgentFilter=async(e,t)=>{const{params:a,inputs:n,debugInfo:s,filterParams:o,namedInputs:i}=e;if(o?.server){const{baseUrl:t,isDebug:c,serverAgentUrlDictionary:u}=o.server,d=s.agentId,l=void 0!==o.streamTokenCallback,f=u&&d&&u[d]?u[d]:[t,d].join("/");void 0===f&&console.log("httpAgentFilter: Url is not defined");const p={params:a,inputs:n,debugInfo:s,filterParams:o,namedInputs:i};return l?await r(e,f,p,c):await(async(e,t)=>{const a=await fetch(e,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await a.json()})(f,p)}return t(e)},e.namedInputValidatorFilter=async(e,t)=>{const{inputSchema:a,namedInputs:r}=e;return a&&"array"!==a.type&&n(a,r||{}),t(e)},e.sortObjectKeys=s,e.streamAgentFilterGenerator=e=>async(t,a)=>(t.debugInfo.isResult&&(t.filterParams.streamTokenCallback=a=>{e(t,a)}),a(t))}));
//# sourceMappingURL=bundle.umd.js.map

"use strict";var e=require("ajv");const t=(t,n)=>{if(!(new e).compile(t)(n))throw new Error("schema not matched");return!0};const n=async(e,t,n,r)=>{const a=async function*(e,t){const{params:n,inputs:r,namedInputs:a,debugInfo:s,filterParams:o}=t,i={params:n,inputs:r,debugInfo:s,filterParams:o,namedInputs:a},c=await fetch(e,{headers:{"Content-Type":"text/event-stream"},method:"POST",body:JSON.stringify(i)}),l=c.body?.getReader();if(200!==c.status||!l)throw new Error("Request failed");const u=new TextDecoder("utf-8");let d=!1;for(;!d;){const{done:e,value:t}=await l.read();if(e)d=e,l.releaseLock();else{const e=u.decode(t,{stream:!0});yield e}}}(t,n),s=[];for await(const t of a)r&&console.log(t),t&&(s.push(t),-1===s.join("").indexOf("___END___")&&e.filterParams.streamTokenCallback&&e.filterParams.streamTokenCallback(t));const o=s.join("").split("___END___")[1];return JSON.parse(o)};exports.agentFilterRunnerBuilder=e=>{const t=e;return(e,n)=>{let r=0;const a=e=>{const s=t[r++];return s?s.agent(e,a):n(e)};return a(e)}},exports.agentInputValidator=t,exports.httpAgentFilter=async(e,t)=>{const{params:r,inputs:a,debugInfo:s,filterParams:o,namedInputs:i}=e;if(o?.server){const{baseUrl:t,isDebug:c,serverAgentUrlDictionary:l}=o.server,u=s.agentId,d=void 0!==o.streamTokenCallback,p=l&&u&&l[u]?l[u]:[t,u].join("/");void 0===p&&console.log("httpAgentFilter: Url is not defined");const m={params:r,inputs:a,debugInfo:s,filterParams:o,namedInputs:i};return d?await n(e,p,m,c):await(async(e,t)=>{const n=await fetch(e,{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await n.json()})(p,m)}return t(e)},exports.namedInputValidatorFilter=async(e,n)=>{const{inputSchema:r,namedInputs:a}=e;return r&&"array"!==r.type&&t(r,a||{}),n(e)},exports.streamAgentFilterGenerator=e=>async(t,n)=>(t.debugInfo.isResult&&(t.filterParams.streamTokenCallback=n=>{e(t,n)}),n(t));
//# sourceMappingURL=bundle.cjs.js.map

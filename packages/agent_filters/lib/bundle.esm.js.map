{"version":3,"file":"bundle.esm.js","sources":["../src/filters/stream.ts","../src/filters/namedinput_validator.ts","../src/filters/http_client.ts","../src/utils/runner.ts"],"sourcesContent":["import { AgentFilterFunction, AgentFunctionContext } from \"graphai\";\n\nexport const streamAgentFilterGenerator = <T>(callback: (context: AgentFunctionContext, data: T) => void) => {\n  const streamAgentFilter: AgentFilterFunction = async (context, next) => {\n    if (context.debugInfo.isResult) {\n      context.filterParams.streamTokenCallback = (data: T) => {\n        callback(context, data);\n      };\n    }\n    return next(context);\n  };\n  return streamAgentFilter;\n};\n","import { AgentFilterFunction } from \"graphai\";\nimport Ajv from \"ajv\";\n\n// export for test\nexport const agentInputValidator = (inputSchema: any, namedInputs: any) => {\n  const ajv = new Ajv();\n  const validateSchema = ajv.compile(inputSchema);\n  if (!validateSchema(namedInputs)) {\n    // console.log(validateSchema.errors);\n    throw new Error(\"schema not matched\");\n  }\n  return true;\n};\n\nexport const namedInputValidatorFilter: AgentFilterFunction = async (context, next) => {\n  const { inputSchema, namedInputs } = context;\n\n  if (inputSchema) {\n    if (inputSchema.type !== \"array\") {\n      agentInputValidator(inputSchema, namedInputs || {});\n    }\n  }\n\n  return next(context);\n};\n","import { AgentFilterFunction, AgentFunctionContext } from \"graphai\";\n\nasync function* streamChatCompletion(url: string, postData: AgentFunctionContext) {\n  const { params, inputs, namedInputs, debugInfo, filterParams } = postData;\n  const postBody = { params, inputs, debugInfo, filterParams, namedInputs };\n\n  const completion = await fetch(url, {\n    headers: {\n      \"Content-Type\": \"text/event-stream\",\n    },\n    method: \"POST\",\n    body: JSON.stringify(postBody),\n  });\n\n  const reader = completion.body?.getReader();\n\n  if (completion.status !== 200 || !reader) {\n    throw new Error(\"Request failed\");\n  }\n\n  const decoder = new TextDecoder(\"utf-8\");\n  let done = false;\n  while (!done) {\n    const { done: readDone, value } = await reader.read();\n    if (readDone) {\n      done = readDone;\n      reader.releaseLock();\n    } else {\n      const token = decoder.decode(value, { stream: true });\n      yield token;\n    }\n  }\n}\n\nconst streamingRequest = async (context: AgentFunctionContext, url: string, postData: AgentFunctionContext, isDebug: boolean | undefined) => {\n  const generator = streamChatCompletion(url, postData);\n\n  const messages = [];\n  for await (const token of generator) {\n    if (isDebug) {\n      console.log(token);\n    }\n    // callback to stream filter\n    if (token) {\n      messages.push(token);\n      if (messages.join(\"\").indexOf(\"___END___\") === -1 && context.filterParams.streamTokenCallback) {\n        context.filterParams.streamTokenCallback(token);\n      }\n    }\n  }\n\n  const payload_data = messages.join(\"\").split(\"___END___\")[1];\n  const data = JSON.parse(payload_data);\n  return data;\n};\nconst httpRequest = async (url: string, postData: AgentFunctionContext) => {\n  const response = await fetch(url, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(postData),\n  });\n  return await response.json();\n};\n\nexport const httpAgentFilter: AgentFilterFunction = async (context, next) => {\n  const { params, inputs, debugInfo, filterParams, namedInputs } = context;\n\n  if (filterParams?.server) {\n    const { baseUrl, isDebug, serverAgentUrlDictionary } = filterParams.server;\n    const agentId = debugInfo.agentId;\n    const isStreaming = filterParams.streamTokenCallback !== undefined;\n    const url = serverAgentUrlDictionary && agentId && serverAgentUrlDictionary[agentId] ? serverAgentUrlDictionary[agentId] : [baseUrl, agentId].join(\"/\");\n    if (url === undefined) {\n      console.log(\"httpAgentFilter: Url is not defined\");\n    }\n    const postData = {\n      params,\n      inputs,\n      debugInfo,\n      filterParams,\n      namedInputs,\n    };\n    if (isStreaming) {\n      return await streamingRequest(context, url, postData, isDebug);\n    }\n    return await httpRequest(url, postData);\n  }\n  return next(context);\n};\n","import { AgentFunctionContext, AgentFunction, AgentFilterInfo, ResultData } from \"graphai\";\n\n// for test and server.\nexport const agentFilterRunnerBuilder = (__agentFilters: AgentFilterInfo[]) => {\n  const agentFilters = __agentFilters;\n  const agentFilterRunner = (context: AgentFunctionContext, agent: AgentFunction) => {\n    let index = 0;\n\n    const next = (context: AgentFunctionContext): Promise<ResultData> => {\n      const agentFilter = agentFilters[index++];\n      if (agentFilter) {\n        return agentFilter.agent(context, next);\n      }\n      return agent(context);\n    };\n\n    return next(context);\n  };\n  return agentFilterRunner;\n};\n"],"names":[],"mappings":"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"}
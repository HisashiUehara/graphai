{"version":3,"file":"bundle.esm.min.js","sources":["../../agent_utils/lib/index.js","../src/node_file_agents/file_read_agent.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arrayValidate = exports.isNamedInputs = exports.sample2GraphData = void 0;\nconst graphai_1 = require(\"graphai\");\nconst sample2GraphData = (sample, agentName) => {\n    const nodes = {};\n    const inputs = (() => {\n        if (Array.isArray(sample.inputs)) {\n            Array.from(sample.inputs.keys()).forEach((key) => {\n                nodes[\"sampleInput\" + key] = {\n                    value: sample.inputs[key],\n                };\n            });\n            return Object.keys(nodes).map((k) => \":\" + k);\n        }\n        nodes[\"sampleInput\"] = {\n            value: sample.inputs,\n        };\n        return Object.keys(sample.inputs).reduce((tmp, key) => {\n            tmp[key] = `:sampleInput.` + key;\n            return tmp;\n        }, {});\n    })();\n    nodes[\"node\"] = {\n        isResult: true,\n        agent: agentName,\n        params: sample.params,\n        inputs: inputs,\n        graph: sample.graph,\n    };\n    const graphData = {\n        version: 0.5,\n        nodes,\n    };\n    return graphData;\n};\nexports.sample2GraphData = sample2GraphData;\nconst isNamedInputs = (namedInputs) => {\n    return Object.keys(namedInputs || {}).length > 0;\n};\nexports.isNamedInputs = isNamedInputs;\nconst arrayValidate = (agentName, namedInputs, extra_message = \"\") => {\n    (0, graphai_1.assert)((0, exports.isNamedInputs)(namedInputs), `${agentName}: namedInputs is UNDEFINED!` + extra_message);\n    (0, graphai_1.assert)(!!namedInputs.array, `${agentName}: namedInputs.array is UNDEFINED!` + extra_message);\n    (0, graphai_1.assert)(Array.isArray(namedInputs.array), `${agentName}: namedInputs.array is not Array.` + extra_message);\n};\nexports.arrayValidate = arrayValidate;\n","import { AgentFunction, AgentFunctionInfo, assert } from \"graphai\";\nimport fs from \"fs\";\nimport { arrayValidate } from \"@graphai/agent_utils\";\n\nexport const fileReadAgent: AgentFunction<\n  {\n    basePath: string;\n    outputType?: string;\n  },\n  {\n    array: string[] | unknown[];\n  },\n  Array<never>,\n  {\n    array: string[];\n  }\n> = async ({ namedInputs, params }) => {\n  const { basePath, outputType } = params;\n\n  arrayValidate(\"fileReadAgent\", namedInputs);\n  assert(!!basePath, \"fileReadAgent: params.basePath is UNDEFINED!\");\n\n  const files = namedInputs.array.map((file: string) => {\n    const path = basePath + file;\n    const buffer = fs.readFileSync(path);\n    if (outputType && outputType === \"base64\") {\n      return buffer.toString(\"base64\");\n    }\n    if (outputType && outputType === \"text\") {\n      return new TextDecoder().decode(buffer);\n    }\n    return buffer;\n  });\n  return {\n    array: files,\n  };\n};\n\nconst fileReadAgentInfo: AgentFunctionInfo = {\n  name: \"fileReadAgent\",\n  agent: fileReadAgent,\n  mock: fileReadAgent,\n  inputs: {\n    type: \"object\",\n    properties: {\n      array: {\n        type: \"array\",\n        description: \"file names\",\n      },\n    },\n    required: [\"array\"],\n  },\n  output: {\n    type: \"object\",\n  },\n  samples: [\n    {\n      inputs: { array: [\"test.txt\"] },\n      params: { basePath: __dirname + \"/../../tests/files/\" },\n      result: {\n        array: [Buffer.from([104, 101, 108, 108, 111, 10])],\n      },\n    },\n    {\n      inputs: { array: [\"test.txt\"] },\n      params: { basePath: __dirname + \"/../../tests/files/\", outputType: \"base64\" },\n      result: {\n        array: [\"aGVsbG8K\"],\n      },\n    },\n    {\n      inputs: { array: [\"test.txt\"] },\n      params: { basePath: __dirname + \"/../../tests/files/\", outputType: \"text\" },\n      result: {\n        array: [\"hello\\n\"],\n      },\n    },\n  ],\n  description: \"Read data from file system and returns data\",\n  category: [\"fs\"],\n  author: \"Receptron team\",\n  repository: \"https://github.com/snakajima/graphai\",\n  license: \"MIT\",\n};\nexport default fileReadAgentInfo;\n"],"names":["Object","defineProperty","exports","value","arrayValidate","isNamedInputs","sample2GraphData","graphai_1","require$$0","sample","agentName","nodes","inputs","Array","isArray","from","keys","forEach","key","map","k","reduce","tmp","isResult","agent","params","graph","version","namedInputs","length","extra_message","assert","array","fileReadAgent","async","basePath","outputType","file","path","buffer","fs","readFileSync","toString","TextDecoder","decode","fileReadAgentInfo","name","mock","type","properties","description","required","output","samples","__dirname","result","Buffer","category","author","repository","license"],"mappings":"4FACAA,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAAE,cAAwBF,EAAwBG,cAAAH,EAAAI,sBAA2B,EAC3E,MAAMC,EAAYC,EAiClBN,EAAAI,iBAhCyB,CAACG,EAAQC,KAC9B,MAAMC,EAAQ,CAAE,EACVC,EACEC,MAAMC,QAAQL,EAAOG,SACrBC,MAAME,KAAKN,EAAOG,OAAOI,QAAQC,SAASC,IACtCP,EAAM,cAAgBO,GAAO,CACzBf,MAAOM,EAAOG,OAAOM,GACxB,IAEElB,OAAOgB,KAAKL,GAAOQ,KAAKC,GAAM,IAAMA,MAE/CT,EAAmB,YAAI,CACnBR,MAAOM,EAAOG,QAEXZ,OAAOgB,KAAKP,EAAOG,QAAQS,QAAO,CAACC,EAAKJ,KAC3CI,EAAIJ,GAAO,gBAAkBA,EACtBI,IACR,KAaP,OAXAX,EAAY,KAAI,CACZY,UAAU,EACVC,MAAOd,EACPe,OAAQhB,EAAOgB,OACfb,OAAQA,EACRc,MAAOjB,EAAOiB,OAEA,CACdC,QAAS,GACThB,QAEY,EAMpBT,EAAAG,cAHuBuB,GACZ5B,OAAOgB,KAAKY,GAAe,CAAA,GAAIC,OAAS,EAQnD3B,EAAAE,cALsB,CAACM,EAAWkB,EAAaE,EAAgB,OAC3D,EAAIvB,EAAUwB,SAAQ,EAAI7B,EAAQG,eAAeuB,GAAc,GAAGlB,+BAAyCoB,IAC3G,EAAIvB,EAAUwB,UAAUH,EAAYI,MAAO,GAAGtB,qCAA+CoB,IAC7F,EAAIvB,EAAUwB,QAAQlB,MAAMC,QAAQc,EAAYI,OAAQ,GAAGtB,qCAA+CoB,EAAc,UCxCrH,MAAMG,EAYTC,OAASN,cAAaH,aACxB,MAAMU,SAAEA,EAAQC,WAAEA,GAAeX,EAEjCrB,EAAaA,cAAC,gBAAiBwB,GAC/BG,IAASI,EAAU,gDAanB,MAAO,CACLH,MAZYJ,EAAYI,MAAMb,KAAKkB,IACnC,MAAMC,EAAOH,EAAWE,EAClBE,EAASC,EAAGC,aAAaH,GAC/B,OAAIF,GAA6B,WAAfA,EACTG,EAAOG,SAAS,UAErBN,GAA6B,SAAfA,GACT,IAAIO,aAAcC,OAAOL,GAE3BA,CAAM,IAId,EAGGM,EAAuC,CAC3CC,KAAM,gBACNtB,MAAOS,EACPc,KAAMd,EACNrB,OAAQ,CACNoC,KAAM,SACNC,WAAY,CACVjB,MAAO,CACLgB,KAAM,QACNE,YAAa,eAGjBC,SAAU,CAAC,UAEbC,OAAQ,CACNJ,KAAM,UAERK,QAAS,CACP,CACEzC,OAAQ,CAAEoB,MAAO,CAAC,aAClBP,OAAQ,CAAEU,SAAUmB,UAAY,uBAChCC,OAAQ,CACNvB,MAAO,CAACwB,OAAOzC,KAAK,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,QAGlD,CACEH,OAAQ,CAAEoB,MAAO,CAAC,aAClBP,OAAQ,CAAEU,SAAUmB,UAAY,sBAAuBlB,WAAY,UACnEmB,OAAQ,CACNvB,MAAO,CAAC,cAGZ,CACEpB,OAAQ,CAAEoB,MAAO,CAAC,aAClBP,OAAQ,CAAEU,SAAUmB,UAAY,sBAAuBlB,WAAY,QACnEmB,OAAQ,CACNvB,MAAO,CAAC,cAIdkB,YAAa,8CACbO,SAAU,CAAC,MACXC,OAAQ,iBACRC,WAAY,uCACZC,QAAS"}
{"version":3,"file":"bundle.esm.min.js","sources":["../src/node_file_agents/file_read_agent.ts"],"sourcesContent":["import { AgentFunction, AgentFunctionInfo, assert } from \"graphai\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { arrayValidate } from \"@graphai/agent_utils\";\n\n\nexport const fileReadAgent: AgentFunction<\n  {\n    basePath: string;\n    outputType?: string;\n  },\n  {\n    array?: string[] | unknown[];\n    data?: string | unknown;\n  },\n  null,\n  {\n    array?: string[];\n    file?: string;\n  }\n> = async ({ namedInputs, params }) => {\n  const { basePath, outputType } = params;\n\n  // arrayValidate(\"fileReadAgent\", namedInputs);\n  assert(!!basePath, \"fileReadAgent: params.basePath is UNDEFINED!\");\n\n  const fileToData = (fileName: string) => {\n    const file = path.resolve([basePath, fileName].join(\"/\"));\n    const buffer = fs.readFileSync(file);\n    if (outputType && outputType === \"base64\") {\n      return buffer.toString(\"base64\");\n    }\n    if (outputType && outputType === \"text\") {\n      return new TextDecoder().decode(buffer);\n    }\n    return buffer;\n  };\n\n  if (namedInputs.array) {\n    return {\n      array: namedInputs.array.map(fileToData),\n    };\n  }\n  if (namedInputs.file) {\n    return {\n      data: fileToData(namedInputs.file),\n    };\n  }\n  throw new Error(\"fileReadAgent no file\");\n};\n\nconst fileReadAgentInfo: AgentFunctionInfo = {\n  name: \"fileReadAgent\",\n  agent: fileReadAgent,\n  mock: fileReadAgent,\n  inputs: {\n    type: \"object\",\n    properties: {\n      array: {\n        type: \"array\",\n        description: \"file names\",\n      },\n    },\n    required: [\"array\"],\n  },\n  output: {\n    type: \"object\",\n  },\n  samples: [\n    {\n      inputs: { array: [\"test.txt\"] },\n      params: { basePath: __dirname + \"/../../tests/files/\" },\n      result: {\n        array: [Buffer.from([104, 101, 108, 108, 111, 10])],\n      },\n    },\n    {\n      inputs: { array: [\"test.txt\"] },\n      params: { basePath: __dirname + \"/../../tests/files/\", outputType: \"base64\" },\n      result: {\n        array: [\"aGVsbG8K\"],\n      },\n    },\n    {\n      inputs: { array: [\"test.txt\"] },\n      params: { basePath: __dirname + \"/../../tests/files/\", outputType: \"text\" },\n      result: {\n        array: [\"hello\\n\"],\n      },\n    },\n    {\n      inputs: { file: \"test.txt\" },\n      params: { basePath: __dirname + \"/../../tests/files/\", outputType: \"text\" },\n      result: {\n        data: \"hello\\n\",\n      },\n    },\n  ],\n  description: \"Read data from file system and returns data\",\n  category: [\"fs\"],\n  author: \"Receptron team\",\n  repository: \"https://github.com/snakajima/graphai\",\n  license: \"MIT\",\n};\nexport default fileReadAgentInfo;\n"],"names":["fileReadAgent","async","namedInputs","params","basePath","outputType","assert","fileToData","fileName","file","path","resolve","join","buffer","fs","readFileSync","toString","TextDecoder","decode","array","map","data","Error","fileReadAgentInfo","name","agent","mock","inputs","type","properties","description","required","output","samples","__dirname","result","Buffer","from","category","author","repository","license"],"mappings":"uEAMO,MAAMA,EAcTC,OAASC,cAAaC,aACxB,MAAMC,SAAEA,EAAQC,WAAEA,GAAeF,EAGjCG,IAASF,EAAU,gDAEnB,MAAMG,EAAcC,IAClB,MAAMC,EAAOC,EAAKC,QAAQ,CAACP,EAAUI,GAAUI,KAAK,MAC9CC,EAASC,EAAGC,aAAaN,GAC/B,OAAIJ,GAA6B,WAAfA,EACTQ,EAAOG,SAAS,UAErBX,GAA6B,SAAfA,GACT,IAAIY,aAAcC,OAAOL,GAE3BA,CAAM,EAGf,GAAIX,EAAYiB,MACd,MAAO,CACLA,MAAOjB,EAAYiB,MAAMC,IAAIb,IAGjC,GAAIL,EAAYO,KACd,MAAO,CACLY,KAAMd,EAAWL,EAAYO,OAGjC,MAAM,IAAIa,MAAM,wBAAwB,EAGpCC,EAAuC,CAC3CC,KAAM,gBACNC,MAAOzB,EACP0B,KAAM1B,EACN2B,OAAQ,CACNC,KAAM,SACNC,WAAY,CACVV,MAAO,CACLS,KAAM,QACNE,YAAa,eAGjBC,SAAU,CAAC,UAEbC,OAAQ,CACNJ,KAAM,UAERK,QAAS,CACP,CACEN,OAAQ,CAAER,MAAO,CAAC,aAClBhB,OAAQ,CAAEC,SAAU8B,UAAY,uBAChCC,OAAQ,CACNhB,MAAO,CAACiB,OAAOC,KAAK,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,QAGlD,CACEV,OAAQ,CAAER,MAAO,CAAC,aAClBhB,OAAQ,CAAEC,SAAU8B,UAAY,sBAAuB7B,WAAY,UACnE8B,OAAQ,CACNhB,MAAO,CAAC,cAGZ,CACEQ,OAAQ,CAAER,MAAO,CAAC,aAClBhB,OAAQ,CAAEC,SAAU8B,UAAY,sBAAuB7B,WAAY,QACnE8B,OAAQ,CACNhB,MAAO,CAAC,aAGZ,CACEQ,OAAQ,CAAElB,KAAM,YAChBN,OAAQ,CAAEC,SAAU8B,UAAY,sBAAuB7B,WAAY,QACnE8B,OAAQ,CACNd,KAAM,aAIZS,YAAa,8CACbQ,SAAU,CAAC,MACXC,OAAQ,iBACRC,WAAY,uCACZC,QAAS"}